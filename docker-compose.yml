services:
  redis:
    image: redis/redis-stack:latest
    container_name: redis
    ports:
      - "6379:6379"
      - "8001:8001"
    environment:
      REDIS_ARGS: "--requirepass hello"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 5

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka1
    ports:
      - "9094:9094"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # LISTNER SETTINGS
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      # Cluster settings
      - KAFKA_KRAFT_CLUSTER_ID=CLUSTER_ID_1
      # Topic settings
      - KAFKA_LOG_RETENTION_MS=120000
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9094 || exit 1
      interval: 5s
      timeout: 30s
      retries: 5
    
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka_ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=localCluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092
    depends_on:
      - kafka
    
  transaction-admin:
    container_name: transaction-admin
    build:
      context: .
      dockerfile: ./transaction-admin/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    
  transaction-service:
    container_name: transaction-service
    build:
      context: .
      dockerfile: ./transaction-service/Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      transaction-admin:
        condition: service_completed_successfully

  transaction-checker:
    container_name: transaction-checker
    build:
      context: .
      dockerfile: ./transaction-checker/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      transaction-admin:
        condition: service_completed_successfully
